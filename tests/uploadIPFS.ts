import 'dotenv/config'

import CID from 'cids'
import { readFile } from 'fs/promises'

const THIRDWEB_CLIENT_ID = process.env.THIRDWEB_CLIENT_ID!
const THIRDWEB_ORIGIN = process.env.THIRDWEB_ORIGIN!

export const uploadIPFS = async (filePath: string) => {
  const formData = new FormData()

  const file = await readFile(filePath)

  const blob = new Blob([file], { type: 'image/png' })

  formData.append('file', blob)

  const result = await fetch('https://storage.thirdweb.com/ipfs/upload', {
    method: 'POST',
    headers: {
      origin: THIRDWEB_ORIGIN,
      'x-client-id': THIRDWEB_CLIENT_ID,
    },
    body: formData,
  })
    .then((r) => r.json())
    .catch(console.error)

  const cid = new CID(result.IpfsHash).toV1().toString('base32')

  await fetch(getIPFSURL(cid))

  return { value: { cid } }
}

export const getIPFSURL = (cid: string) => `https://${cid}.ipfs.cf-ipfs.com`

// Generated by https://quicktype.io

export interface Response {
  ok: boolean
  value: Value
}

export interface Value {
  cid: string
  created: string
  type: string
  scope: string
  files: any[]
  size: number
  name: string
  pin: Pin
  deals: any[]
}

export interface Pin {
  cid: string
  created: string
  size: number
  status: string
}
